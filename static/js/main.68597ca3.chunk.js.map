{"version":3,"sources":["components/Home/ReactLogo.svg","components/Home/TypeScriptLogo.svg","shaders/fragmentShader.glsl","shaders/vertexShader.glsl","utils.tsx","components/BatchRendering/index.tsx","regl-draw-commands/batch.ts","components/Bunny/index.tsx","regl-draw-commands/bunny.ts","components/Home/TableOfContents.tsx","components/Home/index.tsx","components/NoMatch/index.tsx","components/OneShotRendering/index.tsx","regl-draw-commands/triangle.ts","components/App/index.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","r","__webpack_exports__","createReglInstance","createMemoryHistory","initialEntries","canvasRef","drawingBufferHeight","drawingBufferWidth","canvas","current","setAttribute","concat","REGL","Div","styled","div","_templateObject","BatchRendering","regl","React","createRef","this","props","drawCommand","reglInstance","attributes","position","uniforms","angle","ctx","tick","color","batchId","Math","abs","sin","PI","frequency","time","alpha","offset","prop","count","frag","vert","makeDrawCommandBatchOfTriangles","setState","destroy","_this2","clearOptions","depth","state","frame","clear","react_default","a","createElement","Link","to","style","border","height","width","ref","Component","Bunny","camera","createCamera","center","makeDrawCommandBunny","normal","angleNormals","bunny","cells","positions","elements","model","mat4","identity","create","projection","context","out","fovy","aspect","viewportWidth","viewportHeight","perspective","view","eye","up","lookAt","dirty","defaultProps","FlexRow","TableOfContents_templateObject","displayName","Ul","ul","_templateObject2","Li","li","_templateObject3","ToC","data-testid","Home_templateObject","P","Home_templateObject2","Home_templateObject3","spin","keyframes","_templateObject4","DivLogo","_templateObject5","ReactLogo","img","_templateObject6","ReglLogo","_templateObject7","TypescriptLogo","_templateObject8","Home","Home_Div","Home_FlexRow","src","tsLogo","alt","href","target","Home_ReactLogo","reactLogo","TableOfContents","NoMatch_templateObject","NoMatch","message","location","pathname","NoMatch_Div","require","default","OneShotRendering_templateObject","OneShotRendering","reglContext","scale","makeDrawCommandTriangle","_this$props","rgbColors","OneShotRendering_Div","App","BrowserRouter","Switch","Route","exact","path","component","render","components_OneShotRendering","src_components_BatchRendering","src_components_Bunny","components_NoMatch","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.68597ca3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ReactLogo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/TypeScriptLogo.7595fea1.svg\";","export default \"precision mediump float;\\n\\nvarying vec3 frag_color;  // received from the vertex shader\\n\\nvoid main () {\\n  gl_FragColor = vec4(sqrt(frag_color), 1.0);\\n }\\n\"","export default \"precision mediump float;\\n\\nuniform float scale;\\nattribute vec2 position;\\nattribute vec3 color;\\nvarying vec3 frag_color;  // varying to pass to the fragment shader\\n\\nfloat z = 0.0;\\nfloat w = 1.0;\\n\\nvoid main () {\\n  frag_color = color;\\n  gl_Position = vec4(position * scale, z, w);\\n}\"","import { createMemoryHistory, MemoryHistory } from \"history\";\nimport React from \"react\";\nimport { Router } from \"react-router-dom\";\nimport { render } from \"react-testing-library\";\nimport REGL from \"regl\";\n\ninterface IRouterOptions {\n  history: MemoryHistory<any>;\n  route: string;\n}\n\nconst defaultRouterOptions: IRouterOptions = {\n  history: createMemoryHistory({ initialEntries: [\"/\"] }),\n  route: \"/\",\n};\n\n/**\n * `react-testing-library`'s `render` function with a React Router in context.\n * This function is useful for all components that assume a React Router being\n * available in context (e.g. a component which uses the `<Link />` component\n * from `react-router-dom`).\n *\n * @param ui The react component to test\n * @param options Options for the router\n */\nexport const renderWithRouter = (\n  ui: React.ReactElement<any>,\n  options: IRouterOptions = defaultRouterOptions\n) => {\n  const renderResult = render(<Router history={options.history}>{ui}</Router>);\n  const testingUtilities = {\n    ...renderResult,\n    // add `history` to the returned testing utilities to allow us to reference\n    // it in our tests.\n    history: options.history,\n  };\n  return testingUtilities;\n};\n\n/**\n * Creates a WebGL rendering context using a `<canvas>` element and sets the\n * drawing buffer.\n *\n * @param canvasRef\n * @param drawingBufferHeight\n * @param drawingBufferWidth\n */\nexport const createReglInstance = (\n  canvasRef: React.RefObject<HTMLCanvasElement>,\n  drawingBufferHeight: number,\n  drawingBufferWidth: number\n) => {\n  /* When we use a ref, the `current` DOM node could be either the HTML element\n   * we specified (a <canvas>) or `null`.\n   * React guarantees that refs are set before `componentDidMount` or\n   * `componentDidUpdate` hooks, so we can use `!` to tell typescript that we\n   * know for sure that `current` is not `null`.\n   * https://stackoverflow.com/a/50019873/3036129\n   */\n  const canvas: HTMLCanvasElement = canvasRef.current!;\n  // assign a class to the canvas so we can set width and height in the CSS.\n  canvas.setAttribute(\"class\", \"regl-canvas\");\n  /* Set the size of the drawingbuffer (i.e. how many pixels are in the\n   * canvas). Note that this has NOTHING to do with the size the canvas is\n   * displayed (which is set in the CSS).\n   * https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\n   */\n  canvas.setAttribute(\"height\", `${drawingBufferHeight}`);\n  canvas.setAttribute(\"width\", `${drawingBufferWidth}`);\n  const regl = REGL(canvas);\n  // console.warn(regl._gl);\n  return regl;\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport REGL from \"regl\";\nimport styled from \"styled-components\";\nimport {\n  DrawCommandBatchOfTriangles,\n  makeDrawCommandBatchOfTriangles,\n} from \"../../regl-draw-commands/batch\";\nimport { createReglInstance } from \"../../utils\";\nimport \"./index.css\";\n\nconst Div = styled.div`\n  display: block;\n`;\n\n/**\n * Props for the React component.\n * These props might be different from the ones for the regl draw command.\n *\n * @interface IProps\n */\ninterface IProps {\n  alpha: number;\n  drawingBufferHeight: number;\n  drawingBufferWidth: number;\n}\n\ninterface IState {\n  drawCommand: DrawCommandBatchOfTriangles;\n}\n\nclass BatchRendering extends React.Component<IProps, IState> {\n  private regl: REGL.Regl | null = null;\n  private canvasRef = React.createRef<HTMLCanvasElement>();\n  public componentDidMount() {\n    this.regl = createReglInstance(\n      this.canvasRef,\n      this.props.drawingBufferHeight,\n      this.props.drawingBufferWidth\n    );\n    const drawCommand = makeDrawCommandBatchOfTriangles(this.regl);\n    this.setState({\n      drawCommand,\n    });\n  }\n  public componentWillUnmount() {\n    if (this.regl) {\n      this.regl.destroy();\n    }\n  }\n  public render() {\n    const { alpha } = this.props;\n    const clearOptions = {\n      color: [0.0, 0.0, 0.0, 1.0] as REGL.Vec4, // r, g, b, a\n      depth: 1.0,\n    };\n    if (this.state && this.regl) {\n      const callback: REGL.FrameCallback = () => {\n        this.regl!.clear(clearOptions);\n        this.state.drawCommand([\n          { alpha, frequency: 0.1, offset: [0.0, 0.0] },\n          { alpha, frequency: 0.2, offset: [-0.5, 0.0] },\n          { alpha, frequency: 0.5, offset: [0.35, -0.35] },\n        ]);\n      };\n      this.regl.frame(callback);\n    }\n    return (\n      <Div>\n        <h1>Batch rendering</h1>\n        <Link to=\"/\">{\"Home\"}</Link>\n        <div\n          style={{ border: \"1px solid black\", height: \"600px\", width: \"800px\" }}\n        >\n          <canvas ref={this.canvasRef} />\n        </div>\n        <p>TODO: Batch rendering description...</p>\n      </Div>\n    );\n  }\n}\n\nexport default BatchRendering;\n","import REGL from \"regl\";\n\nconst frag = `\n  precision mediump float;\n  uniform vec4 color;\n\n  void main() {\n    gl_FragColor = color;\n  }\n`;\n\nconst vert = `\n  precision mediump float;\n\n  uniform float angle;\n  uniform vec2 offset;\n  attribute vec2 position;\n\n  float x, y, z, w;\n\n  void main() {\n    x = cos(angle) * position.x + sin(angle) * position.y + offset.x;\n    y = -sin(angle) * position.x + cos(angle) * position.y + offset.y;\n    z = 0.0;\n    w = 1.0;\n    gl_Position = vec4(x, y, z, w);\n  }\n`;\n\n/**\n * Not sure if it's really necessary to declare interfaces for attributes and\n * uniforms. It seems to me a repetition of what is available in the fragment\n * shader and in the vertex shader. Maybe this is handy when the shaders are not\n * specified in this file, but in their own `.glsl` files.\n */\ninterface IUniforms {\n  angle: REGL.Uniform;\n  color: REGL.Uniform;\n  offset: REGL.Uniform;\n}\n\ninterface IAttributes {\n  position: REGL.Attribute;\n}\n\n/**\n * Props for the regl draw command.\n * These props might be different from the ones for the React component.\n * You need to pass these props when calling the regl draw command.\n *\n * @interface IProps\n */\ninterface IProps {\n  // It's not yet possible to restrict a number to be within a range [0.0, 1.0]\n  alpha: number;\n  frequency: number;\n  offset: REGL.Vec2;\n}\n\n// Define some type aliases here to keep tidy the code down below.\nexport type DrawCommandBatchOfTriangles = REGL.DrawCommand<\n  REGL.DefaultContext,\n  IProps\n>;\ntype DrawConfigTriangle = REGL.DrawConfig<IUniforms, IAttributes, IProps>;\ntype MDA = REGL.MaybeDynamicAttributes<any, REGL.DefaultContext, IProps>;\ntype MDU = REGL.MaybeDynamicUniforms<any, REGL.DefaultContext, IProps>;\n\n/**\n * Create a command to draw a batch of triangles in the regl instance.\n *\n * @export\n * @param reglInstance The regl instance which contains the WebGL context.\n */\nexport const makeDrawCommandBatchOfTriangles = (\n  reglInstance: REGL.Regl\n): DrawCommandBatchOfTriangles => {\n  // [x,y] positions of the 3 vertices (without the offset)\n  const p0: REGL.Vec2 = [0.0, 0.5];\n  const p1: REGL.Vec2 = [-0.15, -0.25];\n  const p2: REGL.Vec2 = [0.25, -0.35];\n  const attributes: MDA = {\n    position: [p0, p1, p2] as REGL.Attribute,\n  };\n  const uniforms: MDU = {\n    // TODO: context is a REGL.DefaultContext with some additional fields.\n    angle: (ctx: any): number => 0.01 * ctx.tick,\n    color: (ctx: any, props: IProps, batchId: number): REGL.Vec4 => {\n      // console.warn(`batchId ${batchId}, tick ${ctx.tick}`);\n      const r = Math.abs(Math.sin(2 * Math.PI * props.frequency * ctx.time));\n      const g = batchId % 2 === 0 ? 0.0 : 1.0;\n      const b = 0.0;\n      const alpha = props.alpha;\n      return [r, g, b, alpha];\n    },\n    offset: reglInstance.prop<IProps, \"offset\">(\"offset\"),\n  };\n  const drawConfig: DrawConfigTriangle = {\n    attributes,\n    count: 3,\n    frag,\n    uniforms,\n    vert,\n  };\n  const reglDrawCommand = reglInstance(drawConfig);\n  return reglDrawCommand;\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport REGL from \"regl\";\nimport createCamera, { Vec3 } from \"regl-camera\";\nimport { makeDrawCommandBunny } from \"../../regl-draw-commands/bunny\";\nimport { createReglInstance } from \"../../utils\";\nimport \"./index.css\";\n\ninterface IProps {\n  drawingBufferHeight: number;\n  drawingBufferWidth: number;\n}\n\n// `camera` represents the object/function returned by the `createCamera` constructor.\ninterface IState {\n  camera: any;\n  drawCommand: any;\n}\n\nclass Bunny extends React.Component<IProps, IState> {\n  public static defaultProps: Partial<IProps> = {\n    drawingBufferHeight: 500,\n    drawingBufferWidth: 500,\n  };\n  private regl: REGL.Regl | null = null;\n  private canvasRef = React.createRef<HTMLCanvasElement>();\n  public componentDidMount() {\n    this.regl = createReglInstance(\n      this.canvasRef,\n      this.props.drawingBufferHeight,\n      this.props.drawingBufferWidth\n    );\n    const cameraProps = {\n      center: [0, 2.5, 0] as Vec3,\n    };\n    const camera = createCamera(this.regl, cameraProps);\n    const drawCommand = makeDrawCommandBunny(this.regl);\n    this.setState({\n      camera,\n      drawCommand,\n    });\n  }\n  public componentWillUnmount() {\n    if (this.regl) {\n      this.regl.destroy();\n    }\n  }\n  public render() {\n    const clearOptions = {\n      color: [1.0, 1.0, 1.0, 1.0] as REGL.Vec4,\n      depth: 1.0,\n    };\n    if (this.state && this.regl) {\n      const callback: REGL.FrameCallback = () => {\n        /* Pass to the camera function an updateCamera function which takes the\n         * props from the regl context (I think) and updates the camera state */\n        this.state.camera((props: any) => {\n          if (!props.dirty) {\n            // nothing to do if we didn't change the camera\n            return;\n          }\n          this.regl!.clear(clearOptions);\n          this.state.drawCommand(props);\n        });\n      };\n      this.regl.frame(callback);\n    }\n    return (\n      <div>\n        <h1>Bunny</h1>\n        <Link to=\"/\">{\"Home\"}</Link>\n        <div\n          style={{ border: \"1px solid black\", height: \"600px\", width: \"800px\" }}\n        >\n          <canvas ref={this.canvasRef} />\n        </div>\n        <p>TODO: Bunny camera description...</p>\n      </div>\n    );\n  }\n}\n\nexport default Bunny;\n","import angleNormals from \"angle-normals\";\nimport bunny, { Vec3 } from \"bunny\";\nimport { mat4 } from \"gl-matrix\";\nimport REGL from \"regl\";\n\nexport type DrawCommand = REGL.DrawCommand<REGL.DefaultContext, {}>;\ntype MDA = REGL.MaybeDynamicAttributes<any, REGL.DefaultContext, {}>;\ntype MDU = REGL.MaybeDynamicUniforms<any, REGL.DefaultContext, {}>;\n\nexport const makeDrawCommandBunny = (reglInstance: REGL.Regl): DrawCommand => {\n  const vert = `\n    precision mediump float;\n    uniform mat4 model, view, projection;\n    attribute vec3 position, normal;\n    varying vec3 vnormal;\n    \n    void main() {\n      vnormal = normal;\n      gl_Position = projection * view * model * vec4(position, 1.0);\n    }\n  `;\n\n  const frag = `\n    precision mediump float;\n    varying vec3 vnormal;\n\n    void main () {\n      gl_FragColor = vec4(abs(vnormal), 1.0);\n    }\n  `;\n\n  // convert the vertices of the mesh into the position attribute\n  const attributes: MDA = {\n    normal: angleNormals(bunny.cells, bunny.positions),\n    position: bunny.positions,\n  };\n\n  // convert the faces of the mesh into elements\n  const elements = bunny.cells;\n\n  const uniforms: MDU = {\n    model: mat4.identity(mat4.create()) as REGL.Uniform,\n    projection: (context: any, props: any, batchId: number): mat4 => {\n      const out = mat4.create();\n      const fovy = Math.PI / 4;\n      const aspect = props.viewportWidth / props.viewportHeight;\n      const near = 0.01;\n      const far = 100;\n      return mat4.perspective(out, fovy, aspect, near, far);\n    },\n    view: (context: any, props: any, batchId: number): mat4 => {\n      // console.log(\"VIEW\", context, props.eye, batchId);\n      const out = mat4.create();\n      const eye: Vec3 = props.eye;\n      const center: Vec3 = props.center;\n      const up: Vec3 = props.up;\n      return mat4.lookAt(out, eye, center, up);\n    },\n  };\n\n  const drawConfig = {\n    attributes,\n    elements,\n    frag,\n    uniforms,\n    vert,\n  };\n  const reglDrawCommand = reglInstance(drawConfig);\n  return reglDrawCommand;\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center; /* Vertical center alignment */\n  justify-content: center; /* Horizontal center alignment */\n`;\nFlexRow.displayName = \"FlexRow\";\n\nconst Ul = styled.ul`\n  color: blue;\n`;\n\nconst Li = styled.li`\n  text-align: left;\n`;\n\nclass ToC extends React.Component {\n  public render() {\n    return (\n      <FlexRow>\n        <div>\n          <h3>Table of Contents</h3>\n          <Ul data-testid=\"list-of-regl-experiments\">\n            <Li>\n              <Link to=\"/01\">{\"One shot rendering\"}</Link>\n            </Li>\n            <Li>\n              <Link to=\"/02\">{\"Batch rendering\"}</Link>\n            </Li>\n            <Li>\n              <Link to=\"/03\">{\"Bunny & Camera\"}</Link>\n            </Li>\n            <Li>\n              <Link to=\"/04\">{\"TODO: react-regl\"}</Link>\n            </Li>\n          </Ul>\n        </div>\n      </FlexRow>\n    );\n  }\n}\n\nexport default ToC;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport reactLogo from \"./ReactLogo.svg\";\nimport TableOfContents from \"./TableOfContents\";\nimport tsLogo from \"./TypeScriptLogo.svg\";\n\nconst Div = styled.div`\n  display: block;\n`;\n\nconst P = styled.p`\n  font-size: 24px;\n`;\n\nconst FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center; /* Vertical center alignment */\n  justify-content: space-around;\n`;\nFlexRow.displayName = \"FlexRow\";\n\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst DivLogo = styled.div`\n  width: 20vw;\n`;\n\nconst ReactLogo = styled.img`\n  animation-name: ${spin};\n  animation-duration: 5s;\n  animation-timing-function: linear;\n  animation-delay: 0s;\n  animation-iteration-count: infinite;\n`;\nReactLogo.displayName = \"ReactLogo\";\n\nconst ReglLogo = styled.img`\n  height: 100%;\n`;\n\nconst TypescriptLogo = styled.img`\n  height: 100%;\n`;\n\nclass Home extends React.Component {\n  public render() {\n    return (\n      <Div>\n        <h1>Regl Experiments</h1>\n        <P>{\"Collection of experiments with Typescript, React, Regl.\"}</P>\n        <FlexRow>\n          <DivLogo>\n            <TypescriptLogo src={tsLogo} alt=\"Typescript Logo\" />\n          </DivLogo>\n          <DivLogo>\n            <a href=\"https://reactjs.org/\" target=\"_blank\">\n              <ReactLogo src={reactLogo} alt=\"React Logo\" />\n            </a>\n          </DivLogo>\n          <DivLogo>\n            <a href=\"https://github.com/regl-project/regl\" target=\"_blank\">\n              <ReglLogo\n                alt=\"crown\"\n                src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f451.png\"\n              />\n            </a>\n          </DivLogo>\n        </FlexRow>\n        <TableOfContents />\n      </Div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport styled from \"styled-components\";\n\nconst Div = styled.div`\n  height: 100vh;\n  width: 100vw;\n`;\n\nconst NoMatch: React.FunctionComponent<RouteComponentProps> = (\n  props: RouteComponentProps\n) => {\n  const message = `No match for ${props.location.pathname}`;\n  return (\n    <Div>\n      <p>{message}</p>\n    </Div>\n  );\n};\n\nexport default NoMatch;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport REGL from \"regl\";\nimport styled from \"styled-components\";\nimport {\n  DrawCommandTriangle,\n  IProps as IDrawProps,\n  makeDrawCommandTriangle,\n} from \"../../regl-draw-commands/triangle\";\nimport { createReglInstance } from \"../../utils\";\nconst frag: string = require(\"../../shaders/fragmentShader.glsl\").default;\nconst vert: string = require(\"../../shaders/vertexShader.glsl\").default;\n\nconst Div = styled.div`\n  display: block;\n`;\n\n/**\n * Props for the React component.\n * These props might be different from the ones for the regl draw command.\n *\n * @interface IProps\n */\ninterface IProps extends IDrawProps {\n  drawingBufferHeight: number;\n  drawingBufferWidth: number;\n}\n\ninterface IState {\n  drawCommand: DrawCommandTriangle;\n}\n\nclass OneShotRendering extends React.Component<IProps, IState> {\n  public static defaultProps: Partial<IProps> = {\n    scale: 1.0,\n  };\n  private regl: REGL.Regl | null = null;\n  private canvasRef = React.createRef<HTMLCanvasElement>();\n  public componentDidMount() {\n    this.regl = createReglInstance(\n      this.canvasRef,\n      this.props.drawingBufferHeight,\n      this.props.drawingBufferWidth\n    );\n    const drawCommand = makeDrawCommandTriangle(this.regl, frag, vert);\n    this.setState({\n      drawCommand,\n    });\n  }\n  public componentWillUnmount() {\n    if (this.regl) {\n      this.regl.destroy();\n    }\n  }\n  public render() {\n    const { rgbColors, scale } = this.props;\n    if (this.state) {\n      this.state.drawCommand({\n        rgbColors,\n        scale,\n      });\n    }\n    return (\n      <Div>\n        <h1>One shot rendering</h1>\n        <Link to=\"/\">{\"Home\"}</Link>\n        <div\n          style={{ border: \"1px solid black\", height: \"600px\", width: \"800px\" }}\n        >\n          <canvas ref={this.canvasRef} />\n        </div>\n        <p>TODO: One shot rendering description...</p>\n      </Div>\n    );\n  }\n}\n\nexport default OneShotRendering;\n","import REGL from \"regl\";\n\ninterface IUniforms {\n  scale: REGL.Uniform;\n}\n\ninterface IAttributes {\n  color: REGL.Attribute;\n  position: REGL.Attribute;\n}\n\n// props for the regl draw command\nexport interface IProps {\n  rgbColors: number[][];\n  scale: number;\n}\n\n// Define some type aliases here to keep tidy the code down below.\nexport type DrawCommandTriangle = REGL.DrawCommand<REGL.DefaultContext, IProps>;\ntype DrawConfigTriangle = REGL.DrawConfig<IUniforms, IAttributes, IProps>;\ntype MDA = REGL.MaybeDynamicAttributes<any, REGL.DefaultContext, IProps>;\ntype MDU = REGL.MaybeDynamicUniforms<any, REGL.DefaultContext, IProps>;\n\n/**\n * Create a regl command to draw a triangle in the regl instance provided.\n * A command is a complete representation of the WebGL state required to perform\n * some draw call.\n *\n * @param reglContext The regl instance which will contain the WebGL context.\n */\nexport const makeDrawCommandTriangle = (\n  reglContext: REGL.Regl,\n  frag: string,\n  vert: string\n): DrawCommandTriangle => {\n  const attributes: MDA = {\n    color: reglContext.prop<IProps, \"rgbColors\">(\"rgbColors\") as REGL.Attribute,\n    position: [[1.0, -0.75], [0.0, 0.0], [-1.0, -1.0]] as REGL.Attribute,\n  };\n  const uniforms: MDU = {\n    // I tried to use REGL.Uniform without success\n    scale: reglContext.prop<IProps, \"scale\">(\"scale\"),\n  };\n  const drawConfig: DrawConfigTriangle = {\n    attributes,\n    // tell the GPU how many vertices to draw\n    count: 3,\n    frag,\n    uniforms,\n    vert,\n  };\n  const reglDrawCommand = reglContext(drawConfig);\n  return reglDrawCommand;\n};\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport BatchRendering from \"../BatchRendering\";\nimport Bunny from \"../Bunny\";\nimport Home from \"../Home\";\nimport NoMatch from \"../NoMatch\";\nimport OneShotRendering from \"../OneShotRendering\";\n\nclass App extends React.Component {\n  public render() {\n    const rgbColors = [[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]];\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact={true} path=\"/\" component={Home} />\n          <Route\n            exact={true}\n            path=\"/01\"\n            render={() => (\n              <OneShotRendering\n                drawingBufferHeight={500}\n                drawingBufferWidth={500}\n                rgbColors={rgbColors}\n                scale={1.0}\n              />\n            )}\n          />\n          <Route\n            exact={true}\n            path=\"/02\"\n            render={() => (\n              <BatchRendering\n                alpha={1.0}\n                drawingBufferHeight={500}\n                drawingBufferWidth={500}\n              />\n            )}\n          />\n          <Route exact={true} path=\"/03\" render={() => <Bunny />} />\n          <Route\n            render={(props: RouteComponentProps) => <NoMatch {...props} />}\n          />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}